openapi: 3.0.3
info:
  title: VitaNips Healthcare API
  version: 1.0.0
  description: Comprehensive healthcare management platform API - Appointments, Prescriptions,
    Telehealth, and more
  contact:
    name: VitaNips Support
    email: support@vitanips.com
  license:
    name: Proprietary
paths:
  /api/doctors/:
    get:
      operationId: doctors_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - doctors
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDoctorList'
          description: ''
  /api/doctors/{doctor_id}/availability/:
    get:
      operationId: doctors_availability_list
      parameters:
      - in: path
        name: doctor_id
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - doctors
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDoctorAvailabilityList'
          description: ''
  /api/doctors/{doctor_id}/eligible-appointments/:
    get:
      operationId: doctors_eligible_appointments_list
      parameters:
      - in: path
        name: doctor_id
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - doctors
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDoctorEligibleAppointmentList'
          description: ''
  /api/doctors/{doctor_id}/reviews/:
    get:
      operationId: doctors_reviews_list
      parameters:
      - in: path
        name: doctor_id
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - doctors
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDoctorReviewList'
          description: ''
    post:
      operationId: doctors_reviews_create
      parameters:
      - in: path
        name: doctor_id
        schema:
          type: integer
        required: true
      tags:
      - doctors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctorReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DoctorReviewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DoctorReviewRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorReview'
          description: ''
  /api/doctors/{id}/:
    get:
      operationId: doctors_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - doctors
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doctor'
          description: ''
  /api/doctors/appointments/:
    get:
      operationId: doctors_appointments_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - doctors
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAppointmentList'
          description: ''
    post:
      operationId: doctors_appointments_create
      tags:
      - doctors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppointmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppointmentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
          description: ''
  /api/doctors/appointments/{appointment_id}/video_token/:
    get:
      operationId: doctors_appointments_video_token_retrieve
      parameters:
      - in: path
        name: appointment_id
        schema:
          type: integer
        required: true
      tags:
      - doctors
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/doctors/appointments/{id}/:
    get:
      operationId: doctors_appointments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - doctors
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
          description: ''
    put:
      operationId: doctors_appointments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - doctors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppointmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppointmentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
          description: ''
    patch:
      operationId: doctors_appointments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - doctors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAppointmentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAppointmentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAppointmentRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
          description: ''
    delete:
      operationId: doctors_appointments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - doctors
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/doctors/doctor-prescriptions/:
    get:
      operationId: doctors_doctor_prescriptions_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - doctors
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDoctorPrescriptionListDetailList'
          description: ''
    post:
      operationId: doctors_doctor_prescriptions_create
      tags:
      - doctors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctorPrescriptionCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DoctorPrescriptionCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DoctorPrescriptionCreateRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorPrescriptionCreate'
          description: ''
  /api/doctors/doctor-prescriptions/{id}/:
    get:
      operationId: doctors_doctor_prescriptions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this prescription.
        required: true
      tags:
      - doctors
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorPrescriptionListDetail'
          description: ''
    put:
      operationId: doctors_doctor_prescriptions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this prescription.
        required: true
      tags:
      - doctors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctorPrescriptionCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DoctorPrescriptionCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DoctorPrescriptionCreateRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorPrescriptionCreate'
          description: ''
    patch:
      operationId: doctors_doctor_prescriptions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this prescription.
        required: true
      tags:
      - doctors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDoctorPrescriptionCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDoctorPrescriptionCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDoctorPrescriptionCreateRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoctorPrescriptionCreate'
          description: ''
    delete:
      operationId: doctors_doctor_prescriptions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this prescription.
        required: true
      tags:
      - doctors
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/doctors/prescriptions/:
    get:
      operationId: doctors_prescriptions_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - doctors
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPrescriptionList'
          description: ''
  /api/doctors/prescriptions/{id}/:
    get:
      operationId: doctors_prescriptions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - doctors
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prescription'
          description: ''
  /api/doctors/prescriptions/{id}/forward/:
    post:
      operationId: doctors_prescriptions_forward_create
      description: |-
        Forward a prescription to a selected pharmacy by creating a medication order.
        POST /api/doctors/prescriptions/<pk>/forward/
        Body: {"pharmacy_id": <int>}
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - doctors
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/doctors/specialties/:
    get:
      operationId: doctors_specialties_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - doctors
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSpecialtyList'
          description: ''
  /api/emergency/alerts/:
    get:
      operationId: emergency_alerts_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - emergency
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmergencyAlertList'
          description: ''
    post:
      operationId: emergency_alerts_create
      tags:
      - emergency
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmergencyAlertRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmergencyAlertRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmergencyAlertRequest'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmergencyAlert'
          description: ''
  /api/emergency/alerts/{id}/:
    get:
      operationId: emergency_alerts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - emergency
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmergencyAlert'
          description: ''
    put:
      operationId: emergency_alerts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - emergency
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmergencyAlertRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmergencyAlertRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmergencyAlertRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmergencyAlert'
          description: ''
    patch:
      operationId: emergency_alerts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - emergency
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmergencyAlertRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEmergencyAlertRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEmergencyAlertRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmergencyAlert'
          description: ''
    delete:
      operationId: emergency_alerts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - emergency
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/emergency/contacts/:
    get:
      operationId: emergency_contacts_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - emergency
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmergencyContactList'
          description: ''
    post:
      operationId: emergency_contacts_create
      tags:
      - emergency
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmergencyContactRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmergencyContactRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmergencyContactRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmergencyContact'
          description: ''
  /api/emergency/contacts/{id}/:
    get:
      operationId: emergency_contacts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - emergency
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmergencyContact'
          description: ''
    put:
      operationId: emergency_contacts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - emergency
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmergencyContactRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmergencyContactRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmergencyContactRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmergencyContact'
          description: ''
    patch:
      operationId: emergency_contacts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - emergency
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmergencyContactRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEmergencyContactRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEmergencyContactRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmergencyContact'
          description: ''
    delete:
      operationId: emergency_contacts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - emergency
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/emergency/services/:
    get:
      operationId: emergency_services_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - emergency
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmergencyServiceList'
          description: ''
  /api/emergency/trigger_sos/:
    post:
      operationId: emergency_trigger_sos_create
      description: |-
        Receives SOS trigger from frontend, queues background task to send alerts.
        Expects POST data: {'latitude': float, 'longitude': float, 'message': str (optional)}
      tags:
      - emergency
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/health/documents/:
    get:
      operationId: health_documents_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - health
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMedicalDocumentList'
          description: ''
    post:
      operationId: health_documents_create
      tags:
      - health
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalDocumentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MedicalDocumentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MedicalDocumentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalDocument'
          description: ''
  /api/health/documents/{id}/:
    get:
      operationId: health_documents_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - health
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalDocument'
          description: ''
    put:
      operationId: health_documents_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - health
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalDocumentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MedicalDocumentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MedicalDocumentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalDocument'
          description: ''
    patch:
      operationId: health_documents_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - health
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMedicalDocumentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMedicalDocumentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMedicalDocumentRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalDocument'
          description: ''
    delete:
      operationId: health_documents_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - health
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/health/exercise-logs/:
    get:
      operationId: health_exercise_logs_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - health
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExerciseLogList'
          description: ''
    post:
      operationId: health_exercise_logs_create
      tags:
      - health
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExerciseLogRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExerciseLogRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExerciseLogRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseLog'
          description: ''
  /api/health/exercise-logs/{id}/:
    get:
      operationId: health_exercise_logs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - health
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseLog'
          description: ''
    put:
      operationId: health_exercise_logs_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - health
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExerciseLogRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExerciseLogRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExerciseLogRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseLog'
          description: ''
    patch:
      operationId: health_exercise_logs_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - health
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExerciseLogRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExerciseLogRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExerciseLogRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExerciseLog'
          description: ''
    delete:
      operationId: health_exercise_logs_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - health
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/health/food-logs/:
    get:
      operationId: health_food_logs_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - health
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFoodLogList'
          description: ''
    post:
      operationId: health_food_logs_create
      tags:
      - health
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FoodLogRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FoodLogRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FoodLogRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoodLog'
          description: ''
  /api/health/food-logs/{id}/:
    get:
      operationId: health_food_logs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - health
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoodLog'
          description: ''
    put:
      operationId: health_food_logs_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - health
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FoodLogRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FoodLogRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FoodLogRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoodLog'
          description: ''
    patch:
      operationId: health_food_logs_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - health
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFoodLogRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFoodLogRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFoodLogRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FoodLog'
          description: ''
    delete:
      operationId: health_food_logs_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - health
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/health/health-goals/:
    get:
      operationId: health_health_goals_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - health
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHealthGoalList'
          description: ''
    post:
      operationId: health_health_goals_create
      tags:
      - health
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthGoalRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HealthGoalRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HealthGoalRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthGoal'
          description: ''
  /api/health/health-goals/{id}/:
    get:
      operationId: health_health_goals_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - health
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthGoal'
          description: ''
    put:
      operationId: health_health_goals_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - health
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthGoalRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HealthGoalRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HealthGoalRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthGoal'
          description: ''
    patch:
      operationId: health_health_goals_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - health
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHealthGoalRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHealthGoalRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHealthGoalRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthGoal'
          description: ''
    delete:
      operationId: health_health_goals_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - health
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/health/sleep-logs/:
    get:
      operationId: health_sleep_logs_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - health
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSleepLogList'
          description: ''
    post:
      operationId: health_sleep_logs_create
      tags:
      - health
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SleepLogRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SleepLogRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SleepLogRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SleepLog'
          description: ''
  /api/health/sleep-logs/{id}/:
    get:
      operationId: health_sleep_logs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - health
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SleepLog'
          description: ''
    put:
      operationId: health_sleep_logs_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - health
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SleepLogRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SleepLogRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SleepLogRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SleepLog'
          description: ''
    patch:
      operationId: health_sleep_logs_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - health
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSleepLogRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSleepLogRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSleepLogRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SleepLog'
          description: ''
    delete:
      operationId: health_sleep_logs_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - health
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/health/symptoms/:
    get:
      operationId: health_symptoms_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - health
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSymptomLogList'
          description: ''
    post:
      operationId: health_symptoms_create
      tags:
      - health
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SymptomLogRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SymptomLogRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SymptomLogRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SymptomLog'
          description: ''
  /api/health/symptoms/{id}/:
    get:
      operationId: health_symptoms_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - health
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SymptomLog'
          description: ''
    put:
      operationId: health_symptoms_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - health
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SymptomLogRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SymptomLogRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SymptomLogRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SymptomLog'
          description: ''
    patch:
      operationId: health_symptoms_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - health
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSymptomLogRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSymptomLogRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSymptomLogRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SymptomLog'
          description: ''
    delete:
      operationId: health_symptoms_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - health
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/health/vital-signs/:
    get:
      operationId: health_vital_signs_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - health
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVitalSignList'
          description: ''
    post:
      operationId: health_vital_signs_create
      tags:
      - health
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VitalSignRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VitalSignRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VitalSignRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VitalSign'
          description: ''
  /api/health/vital-signs/{id}/:
    get:
      operationId: health_vital_signs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - health
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VitalSign'
          description: ''
    put:
      operationId: health_vital_signs_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - health
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VitalSignRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VitalSignRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VitalSignRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VitalSign'
          description: ''
    patch:
      operationId: health_vital_signs_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - health
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVitalSignRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVitalSignRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVitalSignRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VitalSign'
          description: ''
    delete:
      operationId: health_vital_signs_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - health
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/insurance/claims/:
    get:
      operationId: insurance_claims_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - insurance
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInsuranceClaimList'
          description: ''
    post:
      operationId: insurance_claims_create
      tags:
      - insurance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsuranceClaimRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InsuranceClaimRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InsuranceClaimRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsuranceClaim'
          description: ''
  /api/insurance/claims/{id}/:
    get:
      operationId: insurance_claims_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - insurance
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsuranceClaim'
          description: ''
    put:
      operationId: insurance_claims_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - insurance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsuranceClaimRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InsuranceClaimRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InsuranceClaimRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsuranceClaim'
          description: ''
    patch:
      operationId: insurance_claims_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - insurance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInsuranceClaimRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInsuranceClaimRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInsuranceClaimRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsuranceClaim'
          description: ''
    delete:
      operationId: insurance_claims_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - insurance
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/insurance/documents/:
    get:
      operationId: insurance_documents_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - insurance
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInsuranceDocumentList'
          description: ''
    post:
      operationId: insurance_documents_create
      tags:
      - insurance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsuranceDocumentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InsuranceDocumentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InsuranceDocumentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsuranceDocument'
          description: ''
  /api/insurance/documents/{id}/:
    get:
      operationId: insurance_documents_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - insurance
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsuranceDocument'
          description: ''
    put:
      operationId: insurance_documents_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - insurance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsuranceDocumentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InsuranceDocumentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InsuranceDocumentRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsuranceDocument'
          description: ''
    patch:
      operationId: insurance_documents_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - insurance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedInsuranceDocumentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedInsuranceDocumentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedInsuranceDocumentRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsuranceDocument'
          description: ''
    delete:
      operationId: insurance_documents_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - insurance
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/insurance/plans/:
    get:
      operationId: insurance_plans_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - insurance
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInsurancePlanList'
          description: ''
  /api/insurance/providers/:
    get:
      operationId: insurance_providers_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - insurance
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInsuranceProviderList'
          description: ''
  /api/insurance/user-insurance/:
    get:
      operationId: insurance_user_insurance_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - insurance
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserInsuranceList'
          description: ''
    post:
      operationId: insurance_user_insurance_create
      tags:
      - insurance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInsuranceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserInsuranceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserInsuranceRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInsurance'
          description: ''
  /api/insurance/user-insurance/{id}/:
    get:
      operationId: insurance_user_insurance_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - insurance
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInsurance'
          description: ''
    put:
      operationId: insurance_user_insurance_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - insurance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInsuranceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserInsuranceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserInsuranceRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInsurance'
          description: ''
    patch:
      operationId: insurance_user_insurance_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - insurance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserInsuranceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserInsuranceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserInsuranceRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInsurance'
          description: ''
    delete:
      operationId: insurance_user_insurance_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - insurance
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/notifications/:
    get:
      operationId: notifications_list
      description: Lists notifications for the logged-in user. Supports filtering
        by 'unread'.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - notifications
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationList'
          description: ''
  /api/notifications/{id}/read/:
    post:
      operationId: notifications_read_create
      description: Marks a specific notification as read.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - notifications
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/notifications/read_all/:
    post:
      operationId: notifications_read_all_create
      description: Marks all unread notifications for the user as read.
      tags:
      - notifications
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/notifications/unread_count/:
    get:
      operationId: notifications_unread_count_retrieve
      description: Returns the count of unread notifications.
      tags:
      - notifications
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/pharmacy/:
    get:
      operationId: pharmacy_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - pharmacy
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPharmacyList'
          description: ''
  /api/pharmacy/{pharmacy_id}/inventory/:
    get:
      operationId: pharmacy_inventory_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: pharmacy_id
        schema:
          type: integer
        required: true
      tags:
      - pharmacy
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPharmacyInventoryList'
          description: ''
  /api/pharmacy/medications/:
    get:
      operationId: pharmacy_medications_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - pharmacy
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMedicationList'
          description: ''
  /api/pharmacy/orders/:
    get:
      operationId: pharmacy_orders_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - pharmacy
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMedicationOrderList'
          description: ''
    post:
      operationId: pharmacy_orders_create
      tags:
      - pharmacy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicationOrderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MedicationOrderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MedicationOrderRequest'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationOrder'
          description: ''
  /api/pharmacy/orders/{id}/:
    get:
      operationId: pharmacy_orders_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - pharmacy
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationOrder'
          description: ''
    put:
      operationId: pharmacy_orders_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - pharmacy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicationOrderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MedicationOrderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MedicationOrderRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationOrder'
          description: ''
    patch:
      operationId: pharmacy_orders_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - pharmacy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMedicationOrderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMedicationOrderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMedicationOrderRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationOrder'
          description: ''
    delete:
      operationId: pharmacy_orders_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - pharmacy
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/pharmacy/portal/orders/:
    get:
      operationId: pharmacy_portal_orders_list
      description: Lists orders for the logged-in pharmacy staff's pharmacy.
      parameters:
      - in: query
        name: is_delivery
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          enum:
          - cancelled
          - completed
          - delivering
          - pending
          - processing
          - ready
        description: |-
          * `pending` - Pending
          * `processing` - Processing
          * `ready` - Ready for Pickup
          * `delivering` - Out for Delivery
          * `completed` - Completed
          * `cancelled` - Cancelled
      tags:
      - pharmacy
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPharmacyOrderListList'
          description: ''
  /api/pharmacy/portal/orders/{id}/:
    get:
      operationId: pharmacy_portal_orders_retrieve
      description: Retrieve or Update a specific order for the pharmacy.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - pharmacy
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PharmacyOrderDetail'
          description: ''
    put:
      operationId: pharmacy_portal_orders_update
      description: Retrieve or Update a specific order for the pharmacy.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - pharmacy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PharmacyOrderUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PharmacyOrderUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PharmacyOrderUpdateRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PharmacyOrderUpdate'
          description: ''
    patch:
      operationId: pharmacy_portal_orders_partial_update
      description: Retrieve or Update a specific order for the pharmacy.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - pharmacy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPharmacyOrderUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPharmacyOrderUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPharmacyOrderUpdateRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PharmacyOrderUpdate'
          description: ''
  /api/pharmacy/prescriptions/{prescription_id}/create_order/:
    post:
      operationId: pharmacy_prescriptions_create_order_create
      parameters:
      - in: path
        name: prescription_id
        schema:
          type: integer
        required: true
      tags:
      - pharmacy
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/pharmacy/reminders/:
    get:
      operationId: pharmacy_reminders_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - pharmacy
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMedicationReminderList'
          description: ''
    post:
      operationId: pharmacy_reminders_create
      tags:
      - pharmacy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicationReminderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MedicationReminderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MedicationReminderRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationReminder'
          description: ''
  /api/pharmacy/reminders/{id}/:
    get:
      operationId: pharmacy_reminders_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - pharmacy
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationReminder'
          description: ''
    put:
      operationId: pharmacy_reminders_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - pharmacy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicationReminderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MedicationReminderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MedicationReminderRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationReminder'
          description: ''
    patch:
      operationId: pharmacy_reminders_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - pharmacy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMedicationReminderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMedicationReminderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMedicationReminderRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationReminder'
          description: ''
    delete:
      operationId: pharmacy_reminders_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - pharmacy
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/users/:
    get:
      operationId: users_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
  /api/users/medical-history/:
    get:
      operationId: users_medical_history_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMedicalHistoryList'
          description: ''
    post:
      operationId: users_medical_history_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalHistoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MedicalHistoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MedicalHistoryRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalHistory'
          description: ''
  /api/users/medical-history/{id}/:
    get:
      operationId: users_medical_history_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalHistory'
          description: ''
    put:
      operationId: users_medical_history_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalHistoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MedicalHistoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MedicalHistoryRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalHistory'
          description: ''
    patch:
      operationId: users_medical_history_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMedicalHistoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMedicalHistoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMedicalHistoryRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalHistory'
          description: ''
    delete:
      operationId: users_medical_history_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/profile/:
    get:
      operationId: users_profile_retrieve
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_profile_update
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdate'
          description: ''
    patch:
      operationId: users_profile_partial_update
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserUpdateRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdate'
          description: ''
  /api/users/register/:
    post:
      operationId: users_register_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistration'
          description: ''
  /api/users/vaccinations/:
    get:
      operationId: users_vaccinations_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVaccinationList'
          description: ''
    post:
      operationId: users_vaccinations_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaccinationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VaccinationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VaccinationRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vaccination'
          description: ''
  /api/users/vaccinations/{id}/:
    get:
      operationId: users_vaccinations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vaccination'
          description: ''
    put:
      operationId: users_vaccinations_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaccinationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VaccinationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VaccinationRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vaccination'
          description: ''
    patch:
      operationId: users_vaccinations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVaccinationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVaccinationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVaccinationRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vaccination'
          description: ''
    delete:
      operationId: users_vaccinations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Appointment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        doctor:
          type: integer
        date:
          type: string
          format: date
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        appointment_type:
          $ref: '#/components/schemas/AppointmentTypeEnum'
        status:
          $ref: '#/components/schemas/StatusAf4Enum'
        reason:
          type: string
        notes:
          type: string
          nullable: true
        followup_required:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - date
      - doctor
      - end_time
      - id
      - reason
      - start_time
      - updated_at
      - user
    AppointmentRequest:
      type: object
      properties:
        doctor:
          type: integer
        date:
          type: string
          format: date
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        appointment_type:
          $ref: '#/components/schemas/AppointmentTypeEnum'
        status:
          $ref: '#/components/schemas/StatusAf4Enum'
        reason:
          type: string
          minLength: 1
        notes:
          type: string
          nullable: true
        followup_required:
          type: boolean
      required:
      - date
      - doctor
      - end_time
      - reason
      - start_time
    AppointmentTypeEnum:
      enum:
      - in_person
      - virtual
      type: string
      description: |-
        * `in_person` - In-Person
        * `virtual` - Virtual
    DayOfWeekEnum:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      type: integer
      description: |-
        * `0` - Monday
        * `1` - Tuesday
        * `2` - Wednesday
        * `3` - Thursday
        * `4` - Friday
        * `5` - Saturday
        * `6` - Sunday
    Doctor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        full_name:
          type: string
          readOnly: true
        specialties:
          type: array
          items:
            $ref: '#/components/schemas/Specialty'
          readOnly: true
        profile_picture:
          type: string
          format: uri
          nullable: true
        gender:
          $ref: '#/components/schemas/GenderEnum'
        years_of_experience:
          type: integer
          maximum: 2147483647
          minimum: 0
        education:
          type: string
        bio:
          type: string
        languages_spoken:
          type: string
          maxLength: 200
        consultation_fee:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        is_available_for_virtual:
          type: boolean
        is_verified:
          type: boolean
        average_rating:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - average_rating
      - bio
      - created_at
      - education
      - first_name
      - full_name
      - gender
      - id
      - languages_spoken
      - last_name
      - specialties
      - updated_at
    DoctorAvailability:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        doctor:
          type: integer
          readOnly: true
        day_of_week:
          allOf:
          - $ref: '#/components/schemas/DayOfWeekEnum'
          minimum: -2147483648
          maximum: 2147483647
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        is_available:
          type: boolean
      required:
      - day_of_week
      - doctor
      - end_time
      - id
      - start_time
    DoctorEligibleAppointment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        date:
          type: string
          format: date
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        reason:
          type: string
        status:
          $ref: '#/components/schemas/StatusAf4Enum'
        user:
          type: integer
        patient_email:
          type: string
          format: email
          readOnly: true
        patient_name:
          type: string
          readOnly: true
        has_existing_prescription:
          type: string
          readOnly: true
      required:
      - date
      - end_time
      - has_existing_prescription
      - id
      - patient_email
      - patient_name
      - reason
      - start_time
      - user
    DoctorPrescriptionCreate:
      type: object
      properties:
        diagnosis:
          type: string
        notes:
          type: string
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/DoctorPrescriptionItemCreate'
      required:
      - diagnosis
      - items
    DoctorPrescriptionCreateRequest:
      type: object
      properties:
        appointment_id:
          type: integer
          writeOnly: true
          description: ID of the completed appointment this prescription is for.
        diagnosis:
          type: string
          minLength: 1
        notes:
          type: string
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/DoctorPrescriptionItemCreateRequest'
      required:
      - appointment_id
      - diagnosis
      - items
    DoctorPrescriptionItemCreate:
      type: object
      properties:
        dosage:
          type: string
          maxLength: 100
        frequency:
          type: string
          maxLength: 100
        duration:
          type: string
          maxLength: 100
        instructions:
          type: string
      required:
      - dosage
      - duration
      - frequency
      - instructions
    DoctorPrescriptionItemCreateRequest:
      type: object
      properties:
        medication_name_input:
          type: string
          writeOnly: true
          minLength: 1
          description: Name of the medication. A Medication object will be looked
            up or created.
        dosage:
          type: string
          minLength: 1
          maxLength: 100
        frequency:
          type: string
          minLength: 1
          maxLength: 100
        duration:
          type: string
          minLength: 1
          maxLength: 100
        instructions:
          type: string
          minLength: 1
      required:
      - dosage
      - duration
      - frequency
      - instructions
      - medication_name_input
    DoctorPrescriptionItemDisplay:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        medication_display:
          allOf:
          - $ref: '#/components/schemas/Medication'
          readOnly: true
        medication_name:
          type: string
          description: Medication name as written, or if no structured entry linked.
          maxLength: 200
        dosage:
          type: string
          maxLength: 100
        frequency:
          type: string
          maxLength: 100
        duration:
          type: string
          maxLength: 100
        instructions:
          type: string
      required:
      - dosage
      - duration
      - frequency
      - id
      - instructions
      - medication_display
      - medication_name
    DoctorPrescriptionListDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        appointment:
          type: integer
        appointment_date:
          type: string
          format: date
          readOnly: true
        user:
          type: integer
          readOnly: true
        patient_email:
          type: string
          format: email
          readOnly: true
        patient_name:
          type: string
          readOnly: true
        doctor:
          type: integer
          readOnly: true
        date_prescribed:
          type: string
          format: date
          readOnly: true
        diagnosis:
          type: string
        notes:
          type: string
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/DoctorPrescriptionItemDisplay'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - appointment
      - appointment_date
      - created_at
      - date_prescribed
      - diagnosis
      - doctor
      - id
      - items
      - patient_email
      - patient_name
      - updated_at
      - user
    DoctorReview:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        doctor:
          type: integer
        user:
          type: integer
          readOnly: true
        rating:
          type: integer
          maximum: 2147483647
          minimum: 0
        comment:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - doctor
      - id
      - rating
      - updated_at
      - user
    DoctorReviewRequest:
      type: object
      properties:
        doctor:
          type: integer
        rating:
          type: integer
          maximum: 2147483647
          minimum: 0
        comment:
          type: string
          nullable: true
      required:
      - doctor
      - rating
    EmergencyAlert:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        initiated_at:
          type: string
          format: date-time
          readOnly: true
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
        message:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/EmergencyAlertStatusEnum'
        resolved_at:
          type: string
          format: date-time
          nullable: true
        resolution_notes:
          type: string
          nullable: true
        contacted_persons:
          type: array
          items:
            $ref: '#/components/schemas/EmergencyAlertContact'
          readOnly: true
      required:
      - contacted_persons
      - id
      - initiated_at
      - user
    EmergencyAlertContact:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        alert:
          type: integer
        contact:
          allOf:
          - $ref: '#/components/schemas/EmergencyContact'
          readOnly: true
        sent_at:
          type: string
          format: date-time
          readOnly: true
        delivery_status:
          type: string
          maxLength: 50
        response_received:
          type: boolean
        response_time:
          type: string
          format: date-time
          nullable: true
        response_message:
          type: string
          nullable: true
      required:
      - alert
      - contact
      - id
      - sent_at
    EmergencyAlertContactRequest:
      type: object
      properties:
        alert:
          type: integer
        delivery_status:
          type: string
          minLength: 1
          maxLength: 50
        response_received:
          type: boolean
        response_time:
          type: string
          format: date-time
          nullable: true
        response_message:
          type: string
          nullable: true
      required:
      - alert
    EmergencyAlertRequest:
      type: object
      properties:
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
        message:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/EmergencyAlertStatusEnum'
        resolved_at:
          type: string
          format: date-time
          nullable: true
        resolution_notes:
          type: string
          nullable: true
    EmergencyAlertStatusEnum:
      enum:
      - active
      - responded
      - resolved
      - false_alarm
      type: string
      description: |-
        * `active` - Active
        * `responded` - Responded
        * `resolved` - Resolved
        * `false_alarm` - False Alarm
    EmergencyContact:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        relationship:
          $ref: '#/components/schemas/RelationshipEnum'
        phone_number:
          type: string
          maxLength: 20
        alternative_phone:
          type: string
          nullable: true
          maxLength: 20
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        address:
          type: string
          nullable: true
        is_primary:
          type: boolean
        notes:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - phone_number
      - relationship
      - updated_at
      - user
    EmergencyContactRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        relationship:
          $ref: '#/components/schemas/RelationshipEnum'
        phone_number:
          type: string
          minLength: 1
          maxLength: 20
        alternative_phone:
          type: string
          nullable: true
          maxLength: 20
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        address:
          type: string
          nullable: true
        is_primary:
          type: boolean
        notes:
          type: string
          nullable: true
      required:
      - name
      - phone_number
      - relationship
    EmergencyService:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        service_type:
          $ref: '#/components/schemas/ServiceTypeEnum'
        address:
          type: string
        phone_number:
          type: string
          maxLength: 20
        alternative_phone:
          type: string
          nullable: true
          maxLength: 20
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        website:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
        is_24_hours:
          type: boolean
        operating_hours:
          type: string
          nullable: true
        has_emergency_room:
          type: boolean
        provides_ambulance:
          type: boolean
        notes:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - address
      - created_at
      - id
      - name
      - phone_number
      - service_type
      - updated_at
    ExerciseLog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        activity_type:
          type: string
          maxLength: 100
        datetime:
          type: string
          format: date-time
        duration:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        calories_burned:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        distance:
          type: number
          format: double
          nullable: true
        notes:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - activity_type
      - created_at
      - datetime
      - duration
      - id
      - user
    ExerciseLogRequest:
      type: object
      properties:
        activity_type:
          type: string
          minLength: 1
          maxLength: 100
        datetime:
          type: string
          format: date-time
        duration:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        calories_burned:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        distance:
          type: number
          format: double
          nullable: true
        notes:
          type: string
          nullable: true
      required:
      - activity_type
      - datetime
      - duration
    FoodLog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        food_item:
          type: string
          maxLength: 200
        meal_type:
          $ref: '#/components/schemas/MealTypeEnum'
        datetime:
          type: string
          format: date-time
        calories:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        carbohydrates:
          type: number
          format: double
          nullable: true
        proteins:
          type: number
          format: double
          nullable: true
        fats:
          type: number
          format: double
          nullable: true
        notes:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - datetime
      - food_item
      - id
      - meal_type
      - user
    FoodLogRequest:
      type: object
      properties:
        food_item:
          type: string
          minLength: 1
          maxLength: 200
        meal_type:
          $ref: '#/components/schemas/MealTypeEnum'
        datetime:
          type: string
          format: date-time
        calories:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        carbohydrates:
          type: number
          format: double
          nullable: true
        proteins:
          type: number
          format: double
          nullable: true
        fats:
          type: number
          format: double
          nullable: true
        notes:
          type: string
          nullable: true
      required:
      - datetime
      - food_item
      - meal_type
    FrequencyEnum:
      enum:
      - daily
      - weekly
      - monthly
      - custom
      type: string
      description: |-
        * `daily` - Daily
        * `weekly` - Weekly
        * `monthly` - Monthly
        * `custom` - Custom
    GenderEnum:
      enum:
      - M
      - F
      type: string
      description: |-
        * `M` - Male
        * `F` - Female
    GoalTypeEnum:
      enum:
      - weight
      - steps
      - exercise
      - water
      - sleep
      - custom
      type: string
      description: |-
        * `weight` - Weight
        * `steps` - Steps
        * `exercise` - Exercise
        * `water` - Water Intake
        * `sleep` - Sleep
        * `custom` - Custom
    HealthGoal:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        goal_type:
          $ref: '#/components/schemas/GoalTypeEnum'
        custom_type:
          type: string
          nullable: true
          maxLength: 100
        target_value:
          type: number
          format: double
        unit:
          type: string
          maxLength: 50
        start_date:
          type: string
          format: date
        target_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/HealthGoalStatusEnum'
        progress:
          type: number
          format: double
        notes:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - goal_type
      - id
      - start_date
      - target_date
      - target_value
      - unit
      - updated_at
      - user
    HealthGoalRequest:
      type: object
      properties:
        goal_type:
          $ref: '#/components/schemas/GoalTypeEnum'
        custom_type:
          type: string
          nullable: true
          maxLength: 100
        target_value:
          type: number
          format: double
        unit:
          type: string
          minLength: 1
          maxLength: 50
        start_date:
          type: string
          format: date
        target_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/HealthGoalStatusEnum'
        progress:
          type: number
          format: double
        notes:
          type: string
          nullable: true
      required:
      - goal_type
      - start_date
      - target_date
      - target_value
      - unit
    HealthGoalStatusEnum:
      enum:
      - active
      - completed
      - abandoned
      type: string
      description: |-
        * `active` - Active
        * `completed` - Completed
        * `abandoned` - Abandoned
    InsuranceClaim:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        user_insurance:
          allOf:
          - $ref: '#/components/schemas/UserInsurance'
          readOnly: true
        claim_number:
          type: string
          maxLength: 100
        service_date:
          type: string
          format: date
        provider_name:
          type: string
          maxLength: 200
        service_description:
          type: string
        claimed_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        approved_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        patient_responsibility:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        status:
          $ref: '#/components/schemas/InsuranceClaimStatusEnum'
        date_submitted:
          type: string
          format: date
        date_processed:
          type: string
          format: date
          nullable: true
        notes:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - claim_number
      - claimed_amount
      - created_at
      - date_submitted
      - id
      - provider_name
      - service_date
      - service_description
      - updated_at
      - user
      - user_insurance
    InsuranceClaimRequest:
      type: object
      properties:
        claim_number:
          type: string
          minLength: 1
          maxLength: 100
        service_date:
          type: string
          format: date
        provider_name:
          type: string
          minLength: 1
          maxLength: 200
        service_description:
          type: string
          minLength: 1
        claimed_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        approved_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        patient_responsibility:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        status:
          $ref: '#/components/schemas/InsuranceClaimStatusEnum'
        date_submitted:
          type: string
          format: date
        date_processed:
          type: string
          format: date
          nullable: true
        notes:
          type: string
          nullable: true
      required:
      - claim_number
      - claimed_amount
      - date_submitted
      - provider_name
      - service_date
      - service_description
    InsuranceClaimStatusEnum:
      enum:
      - submitted
      - in_review
      - additional_info
      - approved
      - partially_approved
      - denied
      - paid
      type: string
      description: |-
        * `submitted` - Submitted
        * `in_review` - In Review
        * `additional_info` - Additional Information Needed
        * `approved` - Approved
        * `partially_approved` - Partially Approved
        * `denied` - Denied
        * `paid` - Paid
    InsuranceDocument:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        user_insurance:
          type: integer
          nullable: true
        claim:
          type: integer
          nullable: true
        title:
          type: string
          maxLength: 200
        document:
          type: string
          format: uri
        document_type:
          type: string
          maxLength: 100
        date_uploaded:
          type: string
          format: date
          readOnly: true
        notes:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - date_uploaded
      - document
      - document_type
      - id
      - title
      - user
    InsuranceDocumentRequest:
      type: object
      properties:
        user_insurance:
          type: integer
          nullable: true
        claim:
          type: integer
          nullable: true
        title:
          type: string
          minLength: 1
          maxLength: 200
        document:
          type: string
          format: binary
        document_type:
          type: string
          minLength: 1
          maxLength: 100
        notes:
          type: string
          nullable: true
      required:
      - document
      - document_type
      - title
    InsurancePlan:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        provider:
          allOf:
          - $ref: '#/components/schemas/InsuranceProvider'
          readOnly: true
        name:
          type: string
          maxLength: 200
        plan_type:
          $ref: '#/components/schemas/PlanTypeEnum'
        description:
          type: string
        monthly_premium:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        annual_deductible:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        out_of_pocket_max:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        coverage_details:
          type: string
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - annual_deductible
      - coverage_details
      - created_at
      - description
      - id
      - monthly_premium
      - name
      - out_of_pocket_max
      - plan_type
      - provider
      - updated_at
    InsurancePlanRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        plan_type:
          $ref: '#/components/schemas/PlanTypeEnum'
        description:
          type: string
          minLength: 1
        monthly_premium:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        annual_deductible:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        out_of_pocket_max:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        coverage_details:
          type: string
          minLength: 1
        is_active:
          type: boolean
      required:
      - annual_deductible
      - coverage_details
      - description
      - monthly_premium
      - name
      - out_of_pocket_max
      - plan_type
    InsuranceProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        description:
          type: string
          nullable: true
        logo:
          type: string
          format: uri
          nullable: true
        contact_phone:
          type: string
          nullable: true
          maxLength: 15
        contact_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        website:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - name
      - updated_at
    InsuranceProviderRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        description:
          type: string
          nullable: true
        logo:
          type: string
          format: binary
          nullable: true
        contact_phone:
          type: string
          nullable: true
          maxLength: 15
        contact_email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        website:
          type: string
          format: uri
          nullable: true
          maxLength: 200
      required:
      - name
    LevelEnum:
      enum:
      - info
      - success
      - warning
      - error
      - appointment
      - prescription
      - order
      type: string
      description: |-
        * `info` - Info
        * `success` - Success
        * `warning` - Warning
        * `error` - Error
        * `appointment` - Appointment
        * `prescription` - Prescription
        * `order` - Order
    MealTypeEnum:
      enum:
      - breakfast
      - lunch
      - dinner
      - snack
      type: string
      description: |-
        * `breakfast` - Breakfast
        * `lunch` - Lunch
        * `dinner` - Dinner
        * `snack` - Snack
    MedicalDocument:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
          description: The patient this document belongs to.
        uploaded_by:
          type: integer
          readOnly: true
          nullable: true
          description: User who uploaded the document (patient or doctor).
        appointment:
          type: integer
          nullable: true
        file:
          type: string
          format: uri
          description: The actual uploaded file.
        file_url:
          type: string
          readOnly: true
        filename:
          type: string
          readOnly: true
        description:
          type: string
          nullable: true
          description: Brief description or title of the document.
          maxLength: 255
        document_type:
          type: string
          nullable: true
          description: e.g., Lab Result, Scan, Report, Prescription Image
          maxLength: 50
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - file
      - file_url
      - filename
      - id
      - uploaded_at
      - uploaded_by
      - user
    MedicalDocumentRequest:
      type: object
      properties:
        appointment:
          type: integer
          nullable: true
        file:
          type: string
          format: binary
          description: The actual uploaded file.
        description:
          type: string
          nullable: true
          description: Brief description or title of the document.
          maxLength: 255
        document_type:
          type: string
          nullable: true
          description: e.g., Lab Result, Scan, Report, Prescription Image
          maxLength: 50
      required:
      - file
    MedicalHistory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        condition:
          type: string
          maxLength: 200
        diagnosis_date:
          type: string
          format: date
        treatment:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
          readOnly: true
      required:
      - condition
      - created_at
      - diagnosis_date
      - id
      - updated_at
      - user
    MedicalHistoryRequest:
      type: object
      properties:
        condition:
          type: string
          minLength: 1
          maxLength: 200
        diagnosis_date:
          type: string
          format: date
        treatment:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
        is_active:
          type: boolean
      required:
      - condition
      - diagnosis_date
    Medication:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        generic_name:
          type: string
          nullable: true
          maxLength: 200
        description:
          type: string
        dosage_form:
          type: string
          maxLength: 100
        strength:
          type: string
          maxLength: 100
        manufacturer:
          type: string
          nullable: true
          maxLength: 200
        requires_prescription:
          type: boolean
        side_effects:
          type: string
          nullable: true
        contraindications:
          type: string
          nullable: true
        storage_instructions:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - description
      - dosage_form
      - id
      - name
      - strength
      - updated_at
    MedicationOrder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        pharmacy:
          allOf:
          - $ref: '#/components/schemas/Pharmacy'
          readOnly: true
        prescription:
          type: integer
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/Status683Enum'
          readOnly: true
        is_delivery:
          type: boolean
        delivery_address:
          type: string
          nullable: true
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
        order_date:
          type: string
          format: date-time
          readOnly: true
        pickup_or_delivery_date:
          type: string
          format: date-time
          nullable: true
        notes:
          type: string
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/MedicationOrderItem'
          readOnly: true
      required:
      - id
      - items
      - order_date
      - pharmacy
      - status
      - total_amount
      - user
    MedicationOrderItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          readOnly: true
        prescription_item:
          type: integer
          nullable: true
        prescription_item_details:
          type: string
          readOnly: true
        medication_name:
          type: string
          nullable: true
          description: Medication name as written on prescription
          readOnly: true
        dosage:
          type: string
          nullable: true
          description: Dosage as written on prescription
          readOnly: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        price_per_unit:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        total_price:
          type: string
          readOnly: true
      required:
      - dosage
      - id
      - medication_name
      - order
      - prescription_item_details
      - total_price
    MedicationOrderItemRequest:
      type: object
      properties:
        prescription_item:
          type: integer
          nullable: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        price_per_unit:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
    MedicationOrderRequest:
      type: object
      properties:
        prescription:
          type: integer
          nullable: true
        is_delivery:
          type: boolean
        delivery_address:
          type: string
          nullable: true
        pickup_or_delivery_date:
          type: string
          format: date-time
          nullable: true
        notes:
          type: string
          nullable: true
    MedicationReminder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        medication_display:
          allOf:
          - $ref: '#/components/schemas/Medication'
          readOnly: true
        prescription_item:
          type: integer
          nullable: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        time_of_day:
          type: string
          format: time
        frequency:
          $ref: '#/components/schemas/FrequencyEnum'
        custom_frequency:
          type: string
          nullable: true
          maxLength: 100
        dosage:
          type: string
          maxLength: 100
        notes:
          type: string
          nullable: true
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - dosage
      - frequency
      - id
      - medication_display
      - start_date
      - time_of_day
      - updated_at
      - user
    MedicationReminderRequest:
      type: object
      properties:
        medication_id:
          type: integer
          writeOnly: true
        medication_name_input:
          type: string
          writeOnly: true
          minLength: 1
          description: Name of the medication for the reminder.
        prescription_item:
          type: integer
          nullable: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        time_of_day:
          type: string
          format: time
        frequency:
          $ref: '#/components/schemas/FrequencyEnum'
        custom_frequency:
          type: string
          nullable: true
          maxLength: 100
        dosage:
          type: string
          minLength: 1
          maxLength: 100
        notes:
          type: string
          nullable: true
        is_active:
          type: boolean
      required:
      - dosage
      - frequency
      - medication_name_input
      - start_date
      - time_of_day
    MedicationRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        generic_name:
          type: string
          nullable: true
          maxLength: 200
        description:
          type: string
          minLength: 1
        dosage_form:
          type: string
          minLength: 1
          maxLength: 100
        strength:
          type: string
          minLength: 1
          maxLength: 100
        manufacturer:
          type: string
          nullable: true
          maxLength: 200
        requires_prescription:
          type: boolean
        side_effects:
          type: string
          nullable: true
        contraindications:
          type: string
          nullable: true
        storage_instructions:
          type: string
          nullable: true
      required:
      - description
      - dosage_form
      - name
      - strength
    Notification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        actor_username:
          type: string
          readOnly: true
        level:
          allOf:
          - $ref: '#/components/schemas/LevelEnum'
          readOnly: true
        unread:
          type: boolean
          readOnly: true
        timestamp:
          type: string
          format: date-time
          readOnly: true
        target_url:
          type: string
          format: uri
          readOnly: true
          nullable: true
          description: A URL the user should be directed to upon clicking the notification.
      required:
      - actor_username
      - id
      - level
      - target_url
      - timestamp
      - unread
    PaginatedAppointmentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Appointment'
    PaginatedDoctorAvailabilityList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DoctorAvailability'
    PaginatedDoctorEligibleAppointmentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DoctorEligibleAppointment'
    PaginatedDoctorList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Doctor'
    PaginatedDoctorPrescriptionListDetailList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DoctorPrescriptionListDetail'
    PaginatedDoctorReviewList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DoctorReview'
    PaginatedEmergencyAlertList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/EmergencyAlert'
    PaginatedEmergencyContactList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/EmergencyContact'
    PaginatedEmergencyServiceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/EmergencyService'
    PaginatedExerciseLogList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExerciseLog'
    PaginatedFoodLogList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/FoodLog'
    PaginatedHealthGoalList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/HealthGoal'
    PaginatedInsuranceClaimList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/InsuranceClaim'
    PaginatedInsuranceDocumentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/InsuranceDocument'
    PaginatedInsurancePlanList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/InsurancePlan'
    PaginatedInsuranceProviderList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/InsuranceProvider'
    PaginatedMedicalDocumentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MedicalDocument'
    PaginatedMedicalHistoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MedicalHistory'
    PaginatedMedicationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Medication'
    PaginatedMedicationOrderList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MedicationOrder'
    PaginatedMedicationReminderList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MedicationReminder'
    PaginatedNotificationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
    PaginatedPharmacyInventoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PharmacyInventory'
    PaginatedPharmacyList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Pharmacy'
    PaginatedPharmacyOrderListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PharmacyOrderList'
    PaginatedPrescriptionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Prescription'
    PaginatedSleepLogList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SleepLog'
    PaginatedSpecialtyList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Specialty'
    PaginatedSymptomLogList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SymptomLog'
    PaginatedUserInsuranceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserInsurance'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PaginatedVaccinationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Vaccination'
    PaginatedVitalSignList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/VitalSign'
    PatchedAppointmentRequest:
      type: object
      properties:
        doctor:
          type: integer
        date:
          type: string
          format: date
        start_time:
          type: string
          format: time
        end_time:
          type: string
          format: time
        appointment_type:
          $ref: '#/components/schemas/AppointmentTypeEnum'
        status:
          $ref: '#/components/schemas/StatusAf4Enum'
        reason:
          type: string
          minLength: 1
        notes:
          type: string
          nullable: true
        followup_required:
          type: boolean
    PatchedDoctorPrescriptionCreateRequest:
      type: object
      properties:
        appointment_id:
          type: integer
          writeOnly: true
          description: ID of the completed appointment this prescription is for.
        diagnosis:
          type: string
          minLength: 1
        notes:
          type: string
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/DoctorPrescriptionItemCreateRequest'
    PatchedEmergencyAlertRequest:
      type: object
      properties:
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
        message:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/EmergencyAlertStatusEnum'
        resolved_at:
          type: string
          format: date-time
          nullable: true
        resolution_notes:
          type: string
          nullable: true
    PatchedEmergencyContactRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        relationship:
          $ref: '#/components/schemas/RelationshipEnum'
        phone_number:
          type: string
          minLength: 1
          maxLength: 20
        alternative_phone:
          type: string
          nullable: true
          maxLength: 20
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        address:
          type: string
          nullable: true
        is_primary:
          type: boolean
        notes:
          type: string
          nullable: true
    PatchedExerciseLogRequest:
      type: object
      properties:
        activity_type:
          type: string
          minLength: 1
          maxLength: 100
        datetime:
          type: string
          format: date-time
        duration:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        calories_burned:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        distance:
          type: number
          format: double
          nullable: true
        notes:
          type: string
          nullable: true
    PatchedFoodLogRequest:
      type: object
      properties:
        food_item:
          type: string
          minLength: 1
          maxLength: 200
        meal_type:
          $ref: '#/components/schemas/MealTypeEnum'
        datetime:
          type: string
          format: date-time
        calories:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        carbohydrates:
          type: number
          format: double
          nullable: true
        proteins:
          type: number
          format: double
          nullable: true
        fats:
          type: number
          format: double
          nullable: true
        notes:
          type: string
          nullable: true
    PatchedHealthGoalRequest:
      type: object
      properties:
        goal_type:
          $ref: '#/components/schemas/GoalTypeEnum'
        custom_type:
          type: string
          nullable: true
          maxLength: 100
        target_value:
          type: number
          format: double
        unit:
          type: string
          minLength: 1
          maxLength: 50
        start_date:
          type: string
          format: date
        target_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/HealthGoalStatusEnum'
        progress:
          type: number
          format: double
        notes:
          type: string
          nullable: true
    PatchedInsuranceClaimRequest:
      type: object
      properties:
        claim_number:
          type: string
          minLength: 1
          maxLength: 100
        service_date:
          type: string
          format: date
        provider_name:
          type: string
          minLength: 1
          maxLength: 200
        service_description:
          type: string
          minLength: 1
        claimed_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        approved_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        patient_responsibility:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        status:
          $ref: '#/components/schemas/InsuranceClaimStatusEnum'
        date_submitted:
          type: string
          format: date
        date_processed:
          type: string
          format: date
          nullable: true
        notes:
          type: string
          nullable: true
    PatchedInsuranceDocumentRequest:
      type: object
      properties:
        user_insurance:
          type: integer
          nullable: true
        claim:
          type: integer
          nullable: true
        title:
          type: string
          minLength: 1
          maxLength: 200
        document:
          type: string
          format: binary
        document_type:
          type: string
          minLength: 1
          maxLength: 100
        notes:
          type: string
          nullable: true
    PatchedMedicalDocumentRequest:
      type: object
      properties:
        appointment:
          type: integer
          nullable: true
        file:
          type: string
          format: binary
          description: The actual uploaded file.
        description:
          type: string
          nullable: true
          description: Brief description or title of the document.
          maxLength: 255
        document_type:
          type: string
          nullable: true
          description: e.g., Lab Result, Scan, Report, Prescription Image
          maxLength: 50
    PatchedMedicalHistoryRequest:
      type: object
      properties:
        condition:
          type: string
          minLength: 1
          maxLength: 200
        diagnosis_date:
          type: string
          format: date
        treatment:
          type: string
          nullable: true
        notes:
          type: string
          nullable: true
        is_active:
          type: boolean
    PatchedMedicationOrderRequest:
      type: object
      properties:
        prescription:
          type: integer
          nullable: true
        is_delivery:
          type: boolean
        delivery_address:
          type: string
          nullable: true
        pickup_or_delivery_date:
          type: string
          format: date-time
          nullable: true
        notes:
          type: string
          nullable: true
    PatchedMedicationReminderRequest:
      type: object
      properties:
        medication_id:
          type: integer
          writeOnly: true
        medication_name_input:
          type: string
          writeOnly: true
          minLength: 1
          description: Name of the medication for the reminder.
        prescription_item:
          type: integer
          nullable: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        time_of_day:
          type: string
          format: time
        frequency:
          $ref: '#/components/schemas/FrequencyEnum'
        custom_frequency:
          type: string
          nullable: true
          maxLength: 100
        dosage:
          type: string
          minLength: 1
          maxLength: 100
        notes:
          type: string
          nullable: true
        is_active:
          type: boolean
    PatchedPharmacyOrderUpdateRequest:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status683Enum'
        notes:
          type: string
          nullable: true
        pickup_or_delivery_date:
          type: string
          format: date-time
          nullable: true
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
    PatchedSleepLogRequest:
      type: object
      properties:
        sleep_time:
          type: string
          format: date-time
        wake_time:
          type: string
          format: date-time
        quality:
          allOf:
          - $ref: '#/components/schemas/QualityEnum'
          minimum: -2147483648
          maximum: 2147483647
        interruptions:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        notes:
          type: string
          nullable: true
    PatchedSymptomLogRequest:
      type: object
      properties:
        symptom:
          type: string
          minLength: 1
          maxLength: 200
        date_experienced:
          type: string
          format: date-time
        severity:
          allOf:
          - $ref: '#/components/schemas/SeverityEnum'
          minimum: -2147483648
          maximum: 2147483647
        duration:
          type: string
          nullable: true
          maxLength: 100
        notes:
          type: string
          nullable: true
    PatchedUserInsuranceRequest:
      type: object
      properties:
        policy_number:
          type: string
          minLength: 1
          maxLength: 100
        group_number:
          type: string
          nullable: true
          maxLength: 100
        member_id:
          type: string
          minLength: 1
          maxLength: 100
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        is_primary:
          type: boolean
        insurance_card_front:
          type: string
          format: binary
          nullable: true
        insurance_card_back:
          type: string
          format: binary
          nullable: true
    PatchedUserUpdateRequest:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        phone_number:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        address:
          type: string
          nullable: true
        date_of_birth:
          type: string
          format: date
          nullable: true
        profile_picture:
          type: string
          format: binary
          nullable: true
        medical_history_summary:
          type: string
          nullable: true
        blood_group:
          type: string
          nullable: true
          maxLength: 5
        genotype:
          type: string
          nullable: true
          maxLength: 5
        allergies:
          type: string
          nullable: true
        chronic_conditions:
          type: string
          nullable: true
        notify_appointment_confirmation_email:
          type: boolean
        notify_appointment_cancellation_email:
          type: boolean
        notify_appointment_reminder_email:
          type: boolean
        notify_prescription_update_email:
          type: boolean
        notify_order_update_email:
          type: boolean
        notify_general_updates_email:
          type: boolean
        notify_refill_reminder_email:
          type: boolean
        notify_appointment_reminder_sms:
          type: boolean
        notify_appointment_reminder_push:
          type: boolean
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: Weight in kg
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: Height in cm
    PatchedVaccinationRequest:
      type: object
      properties:
        vaccine_name:
          type: string
          minLength: 1
          maxLength: 200
        date_administered:
          type: string
          format: date
        dose_number:
          type: integer
          maximum: 2147483647
          minimum: 0
        next_dose_date:
          type: string
          format: date
          nullable: true
        administered_at:
          type: string
          nullable: true
          maxLength: 200
        batch_number:
          type: string
          nullable: true
          maxLength: 50
        notes:
          type: string
          nullable: true
    PatchedVitalSignRequest:
      type: object
      properties:
        date_recorded:
          type: string
          format: date-time
        heart_rate:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        systolic_pressure:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        diastolic_pressure:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        respiratory_rate:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        temperature:
          type: number
          format: double
          nullable: true
        oxygen_saturation:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        blood_glucose:
          type: number
          format: double
          nullable: true
        weight:
          type: number
          format: double
          nullable: true
        notes:
          type: string
          nullable: true
    Pharmacy:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        address:
          type: string
        phone_number:
          type: string
          maxLength: 15
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
        operating_hours:
          type: string
        is_24_hours:
          type: boolean
        offers_delivery:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - address
      - created_at
      - id
      - name
      - operating_hours
      - phone_number
      - updated_at
    PharmacyInventory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        pharmacy:
          type: integer
        medication:
          allOf:
          - $ref: '#/components/schemas/Medication'
          readOnly: true
        in_stock:
          type: boolean
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        last_updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - id
      - last_updated
      - medication
      - pharmacy
      - price
    PharmacyOrderDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        pharmacy:
          type: integer
          readOnly: true
        prescription:
          type: integer
          readOnly: true
          nullable: true
        status:
          $ref: '#/components/schemas/Status683Enum'
        is_delivery:
          type: boolean
          readOnly: true
        delivery_address:
          type: string
          readOnly: true
          nullable: true
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
        order_date:
          type: string
          format: date-time
          readOnly: true
        pickup_or_delivery_date:
          type: string
          format: date-time
          nullable: true
        notes:
          type: string
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/PharmacyOrderItemView'
          readOnly: true
      required:
      - delivery_address
      - id
      - is_delivery
      - items
      - order_date
      - pharmacy
      - prescription
      - total_amount
      - user
    PharmacyOrderItemView:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        medication_name_text:
          type: string
          readOnly: true
          nullable: true
          description: Medication name as written on prescription
        dosage_text:
          type: string
          readOnly: true
          nullable: true
          description: Dosage as written on prescription
        quantity:
          type: integer
          readOnly: true
        price_per_unit:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
        total_price:
          type: string
          readOnly: true
      required:
      - dosage_text
      - id
      - medication_name_text
      - price_per_unit
      - quantity
      - total_price
    PharmacyOrderList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        patient_name:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/Status683Enum'
        order_date:
          type: string
          format: date-time
          readOnly: true
        is_delivery:
          type: boolean
        pickup_or_delivery_date:
          type: string
          format: date-time
          nullable: true
        prescription:
          type: integer
          nullable: true
      required:
      - id
      - order_date
      - patient_name
    PharmacyOrderUpdate:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status683Enum'
        notes:
          type: string
          nullable: true
        pickup_or_delivery_date:
          type: string
          format: date-time
          nullable: true
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
    PharmacyOrderUpdateRequest:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status683Enum'
        notes:
          type: string
          nullable: true
        pickup_or_delivery_date:
          type: string
          format: date-time
          nullable: true
        total_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
    PharmacyRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 200
        address:
          type: string
          minLength: 1
        phone_number:
          type: string
          minLength: 1
          maxLength: 15
        email:
          type: string
          format: email
          nullable: true
          maxLength: 254
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
        operating_hours:
          type: string
          minLength: 1
        is_24_hours:
          type: boolean
        offers_delivery:
          type: boolean
      required:
      - address
      - name
      - operating_hours
      - phone_number
    PlanTypeEnum:
      enum:
      - HMO
      - PPO
      - EPO
      - POS
      - HDHP
      - other
      type: string
      description: |-
        * `HMO` - Health Maintenance Organization
        * `PPO` - Preferred Provider Organization
        * `EPO` - Exclusive Provider Organization
        * `POS` - Point of Service
        * `HDHP` - High Deductible Health Plan
        * `other` - Other
    Prescription:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        appointment:
          type: integer
        user:
          type: integer
          readOnly: true
        doctor:
          type: integer
          readOnly: true
        date_prescribed:
          type: string
          format: date
          readOnly: true
        diagnosis:
          type: string
        notes:
          type: string
          nullable: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/PrescriptionItem'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - appointment
      - created_at
      - date_prescribed
      - diagnosis
      - doctor
      - id
      - items
      - updated_at
      - user
    PrescriptionItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        prescription:
          type: integer
        medication_details:
          type: string
          readOnly: true
        medication_name:
          type: string
          description: Medication name as written, or if no structured entry linked.
          maxLength: 200
        dosage:
          type: string
          maxLength: 100
        frequency:
          type: string
          maxLength: 100
        duration:
          type: string
          maxLength: 100
        instructions:
          type: string
      required:
      - dosage
      - duration
      - frequency
      - id
      - instructions
      - medication_details
      - medication_name
      - prescription
    QualityEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      type: integer
      description: |-
        * `1` - Poor
        * `2` - Fair
        * `3` - Good
        * `4` - Excellent
    RelationshipEnum:
      enum:
      - spouse
      - parent
      - child
      - sibling
      - relative
      - friend
      - doctor
      - caregiver
      - other
      type: string
      description: |-
        * `spouse` - Spouse
        * `parent` - Parent
        * `child` - Child
        * `sibling` - Sibling
        * `relative` - Other Relative
        * `friend` - Friend
        * `doctor` - Doctor
        * `caregiver` - Caregiver
        * `other` - Other
    ServiceTypeEnum:
      enum:
      - hospital
      - ambulance
      - fire
      - police
      - poison
      - other
      type: string
      description: |-
        * `hospital` - Hospital
        * `ambulance` - Ambulance Service
        * `fire` - Fire Department
        * `police` - Police Station
        * `poison` - Poison Control
        * `other` - Other
    SeverityEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      type: integer
      description: |-
        * `1` - Mild
        * `2` - Moderate
        * `3` - Severe
        * `4` - Very Severe
    SleepLog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        sleep_time:
          type: string
          format: date-time
        wake_time:
          type: string
          format: date-time
        quality:
          allOf:
          - $ref: '#/components/schemas/QualityEnum'
          minimum: -2147483648
          maximum: 2147483647
        interruptions:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        notes:
          type: string
          nullable: true
        duration:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - duration
      - id
      - quality
      - sleep_time
      - user
      - wake_time
    SleepLogRequest:
      type: object
      properties:
        sleep_time:
          type: string
          format: date-time
        wake_time:
          type: string
          format: date-time
        quality:
          allOf:
          - $ref: '#/components/schemas/QualityEnum'
          minimum: -2147483648
          maximum: 2147483647
        interruptions:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        notes:
          type: string
          nullable: true
      required:
      - quality
      - sleep_time
      - wake_time
    Specialty:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
          nullable: true
      required:
      - id
      - name
    Status683Enum:
      enum:
      - pending
      - processing
      - ready
      - delivering
      - completed
      - cancelled
      type: string
      description: |-
        * `pending` - Pending
        * `processing` - Processing
        * `ready` - Ready for Pickup
        * `delivering` - Out for Delivery
        * `completed` - Completed
        * `cancelled` - Cancelled
    StatusAf4Enum:
      enum:
      - scheduled
      - confirmed
      - cancelled
      - completed
      - no_show
      type: string
      description: |-
        * `scheduled` - Scheduled
        * `confirmed` - Confirmed
        * `cancelled` - Cancelled
        * `completed` - Completed
        * `no_show` - No Show
    SymptomLog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        symptom:
          type: string
          maxLength: 200
        date_experienced:
          type: string
          format: date-time
        severity:
          allOf:
          - $ref: '#/components/schemas/SeverityEnum'
          minimum: -2147483648
          maximum: 2147483647
        duration:
          type: string
          nullable: true
          maxLength: 100
        notes:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - date_experienced
      - id
      - severity
      - symptom
      - user
    SymptomLogRequest:
      type: object
      properties:
        symptom:
          type: string
          minLength: 1
          maxLength: 200
        date_experienced:
          type: string
          format: date-time
        severity:
          allOf:
          - $ref: '#/components/schemas/SeverityEnum'
          minimum: -2147483648
          maximum: 2147483647
        duration:
          type: string
          nullable: true
          maxLength: 100
        notes:
          type: string
          nullable: true
      required:
      - date_experienced
      - severity
      - symptom
    TokenObtainPair:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - refresh
    TokenObtainPairRequest:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - email
      - password
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
      required:
      - access
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        phone_number:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        address:
          type: string
          nullable: true
        date_of_birth:
          type: string
          format: date
          nullable: true
        profile_picture:
          type: string
          format: uri
          nullable: true
        medical_history_summary:
          type: string
          nullable: true
        blood_group:
          type: string
          nullable: true
          maxLength: 5
        genotype:
          type: string
          nullable: true
          maxLength: 5
        allergies:
          type: string
          nullable: true
        chronic_conditions:
          type: string
          nullable: true
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: Weight in kg
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: Height in cm
        notify_appointment_confirmation_email:
          type: boolean
        notify_appointment_cancellation_email:
          type: boolean
        notify_appointment_reminder_email:
          type: boolean
        notify_prescription_update_email:
          type: boolean
        notify_order_update_email:
          type: boolean
        notify_general_updates_email:
          type: boolean
        notify_refill_reminder_email:
          type: boolean
        notify_appointment_reminder_sms:
          type: boolean
        notify_appointment_reminder_push:
          type: boolean
        is_pharmacy_staff:
          type: boolean
          readOnly: true
          title: Pharmacy staff status
          description: Designates whether the user can log into the pharmacy portal.
        works_at_pharmacy:
          type: integer
          readOnly: true
          nullable: true
          description: The pharmacy this staff member belongs to.
        insurance_details:
          type: array
          items:
            $ref: '#/components/schemas/UserInsurance'
          readOnly: true
        emergency_contacts:
          type: array
          items:
            $ref: '#/components/schemas/EmergencyContact'
          readOnly: true
        vaccinations:
          type: array
          items:
            $ref: '#/components/schemas/Vaccination'
          readOnly: true
        is_doctor:
          type: string
          readOnly: true
        doctor_id:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - doctor_id
      - email
      - emergency_contacts
      - id
      - insurance_details
      - is_doctor
      - is_pharmacy_staff
      - updated_at
      - username
      - vaccinations
      - works_at_pharmacy
    UserInsurance:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        plan:
          allOf:
          - $ref: '#/components/schemas/InsurancePlan'
          readOnly: true
        policy_number:
          type: string
          maxLength: 100
        group_number:
          type: string
          nullable: true
          maxLength: 100
        member_id:
          type: string
          maxLength: 100
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        is_primary:
          type: boolean
        insurance_card_front:
          type: string
          format: uri
          nullable: true
        insurance_card_back:
          type: string
          format: uri
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - member_id
      - plan
      - policy_number
      - start_date
      - updated_at
      - user
    UserInsuranceRequest:
      type: object
      properties:
        policy_number:
          type: string
          minLength: 1
          maxLength: 100
        group_number:
          type: string
          nullable: true
          maxLength: 100
        member_id:
          type: string
          minLength: 1
          maxLength: 100
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        is_primary:
          type: boolean
        insurance_card_front:
          type: string
          format: binary
          nullable: true
        insurance_card_back:
          type: string
          format: binary
          nullable: true
      required:
      - member_id
      - policy_number
      - start_date
    UserRegistration:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - username
    UserRegistrationRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
          title: Email address
          maxLength: 254
        username:
          type: string
          minLength: 1
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
          minLength: 1
          maxLength: 128
        password2:
          type: string
          writeOnly: true
          minLength: 1
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - password
      - password2
      - username
    UserRequest:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        phone_number:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        address:
          type: string
          nullable: true
        date_of_birth:
          type: string
          format: date
          nullable: true
        profile_picture:
          type: string
          format: binary
          nullable: true
        medical_history_summary:
          type: string
          nullable: true
        blood_group:
          type: string
          nullable: true
          maxLength: 5
        genotype:
          type: string
          nullable: true
          maxLength: 5
        allergies:
          type: string
          nullable: true
        chronic_conditions:
          type: string
          nullable: true
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: Weight in kg
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: Height in cm
        notify_appointment_confirmation_email:
          type: boolean
        notify_appointment_cancellation_email:
          type: boolean
        notify_appointment_reminder_email:
          type: boolean
        notify_prescription_update_email:
          type: boolean
        notify_order_update_email:
          type: boolean
        notify_general_updates_email:
          type: boolean
        notify_refill_reminder_email:
          type: boolean
        notify_appointment_reminder_sms:
          type: boolean
        notify_appointment_reminder_push:
          type: boolean
    UserUpdate:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        phone_number:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        address:
          type: string
          nullable: true
        date_of_birth:
          type: string
          format: date
          nullable: true
        profile_picture:
          type: string
          format: uri
          nullable: true
        medical_history_summary:
          type: string
          nullable: true
        blood_group:
          type: string
          nullable: true
          maxLength: 5
        genotype:
          type: string
          nullable: true
          maxLength: 5
        allergies:
          type: string
          nullable: true
        chronic_conditions:
          type: string
          nullable: true
        notify_appointment_confirmation_email:
          type: boolean
        notify_appointment_cancellation_email:
          type: boolean
        notify_appointment_reminder_email:
          type: boolean
        notify_prescription_update_email:
          type: boolean
        notify_order_update_email:
          type: boolean
        notify_general_updates_email:
          type: boolean
        notify_refill_reminder_email:
          type: boolean
        notify_appointment_reminder_sms:
          type: boolean
        notify_appointment_reminder_push:
          type: boolean
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: Weight in kg
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: Height in cm
    UserUpdateRequest:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        phone_number:
          type: string
          nullable: true
          pattern: ^\+?1?\d{9,15}$
          maxLength: 17
        address:
          type: string
          nullable: true
        date_of_birth:
          type: string
          format: date
          nullable: true
        profile_picture:
          type: string
          format: binary
          nullable: true
        medical_history_summary:
          type: string
          nullable: true
        blood_group:
          type: string
          nullable: true
          maxLength: 5
        genotype:
          type: string
          nullable: true
          maxLength: 5
        allergies:
          type: string
          nullable: true
        chronic_conditions:
          type: string
          nullable: true
        notify_appointment_confirmation_email:
          type: boolean
        notify_appointment_cancellation_email:
          type: boolean
        notify_appointment_reminder_email:
          type: boolean
        notify_prescription_update_email:
          type: boolean
        notify_order_update_email:
          type: boolean
        notify_general_updates_email:
          type: boolean
        notify_refill_reminder_email:
          type: boolean
        notify_appointment_reminder_sms:
          type: boolean
        notify_appointment_reminder_push:
          type: boolean
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: Weight in kg
        height:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          nullable: true
          description: Height in cm
    Vaccination:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        vaccine_name:
          type: string
          maxLength: 200
        date_administered:
          type: string
          format: date
        dose_number:
          type: integer
          maximum: 2147483647
          minimum: 0
        next_dose_date:
          type: string
          format: date
          nullable: true
        administered_at:
          type: string
          nullable: true
          maxLength: 200
        batch_number:
          type: string
          nullable: true
          maxLength: 50
        user:
          type: integer
          readOnly: true
        notes:
          type: string
          nullable: true
      required:
      - date_administered
      - id
      - user
      - vaccine_name
    VaccinationRequest:
      type: object
      properties:
        vaccine_name:
          type: string
          minLength: 1
          maxLength: 200
        date_administered:
          type: string
          format: date
        dose_number:
          type: integer
          maximum: 2147483647
          minimum: 0
        next_dose_date:
          type: string
          format: date
          nullable: true
        administered_at:
          type: string
          nullable: true
          maxLength: 200
        batch_number:
          type: string
          nullable: true
          maxLength: 50
        notes:
          type: string
          nullable: true
      required:
      - date_administered
      - vaccine_name
    VitalSign:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        date_recorded:
          type: string
          format: date-time
        heart_rate:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        systolic_pressure:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        diastolic_pressure:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        respiratory_rate:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        temperature:
          type: number
          format: double
          nullable: true
        oxygen_saturation:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        blood_glucose:
          type: number
          format: double
          nullable: true
        weight:
          type: number
          format: double
          nullable: true
        notes:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - date_recorded
      - id
      - user
    VitalSignRequest:
      type: object
      properties:
        date_recorded:
          type: string
          format: date-time
        heart_rate:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        systolic_pressure:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        diastolic_pressure:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        respiratory_rate:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        temperature:
          type: number
          format: double
          nullable: true
        oxygen_saturation:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        blood_glucose:
          type: number
          format: double
          nullable: true
        weight:
          type: number
          format: double
          nullable: true
        notes:
          type: string
          nullable: true
      required:
      - date_recorded
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
- name: Authentication
  description: User registration, login, and JWT management
- name: Users
  description: User profile and account management
- name: Doctors
  description: Doctor profiles, availability, and reviews
- name: Appointments
  description: Book, manage, and track appointments
- name: Prescriptions
  description: View and manage prescriptions
- name: Pharmacy
  description: Pharmacies, medications, and orders
- name: Health
  description: Vital signs, symptoms, medical documents
- name: Insurance
  description: Insurance coverage and claims
- name: Emergency
  description: Emergency services and SOS alerts
- name: Notifications
  description: In-app notifications and preferences
